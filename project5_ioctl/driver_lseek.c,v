head	1.9;
access;
symbols;
locks
	root:1.9; strict;
comment	@ * @;


1.9
date	2015.07.12.11.28.26;	author root;	state Exp;
branches;
next	1.8;

1.8
date	2015.07.12.11.22.12;	author root;	state Exp;
branches;
next	1.7;

1.7
date	2015.07.12.08.02.22;	author root;	state Exp;
branches;
next	1.6;

1.6
date	2015.07.12.07.47.23;	author root;	state Exp;
branches;
next	1.5;

1.5
date	2015.07.12.07.39.11;	author root;	state Exp;
branches;
next	1.4;

1.4
date	2015.07.05.18.16.28;	author root;	state Exp;
branches;
next	1.3;

1.3
date	2015.07.05.18.11.19;	author root;	state Exp;
branches;
next	1.2;

1.2
date	2015.07.05.17.58.27;	author root;	state Exp;
branches;
next	1.1;

1.1
date	2015.07.05.17.58.01;	author root;	state Exp;
branches;
next	;


desc
@defining lseek function prototype
for now nothing has been done
@


1.9
log
@*** empty log message ***
@
text
@#include "header.h"
#include "myDriver.h"

loff_t driver_lseek(struct file *fp , loff_t offset, int pos)
{	
	struct dev *f_ldev;
	int total_data;
	printk(KERN_INFO "Entry in %s \n",__func__);
	printk(KERN_INFO "offset = %ld \n",offset);
	printk(KERN_INFO "Starting Point for offset=%d \n",pos);
	printk(KERN_INFO "file position =%d \n",fp->f_pos);	
	f_ldev = fp ->private_data;
	total_data = f_ldev ->data_size;
	switch(pos)
	{
		case SEEK_SET:
				fp->f_pos = offset;	
				printk(KERN_INFO "New File Position =%d \n",fp->f_pos);
				break;
		case SEEK_END:
				fp->f_pos = total_data - offset;
				printk(KERN_INFO "New File Position =%d \n",fp->f_pos);
				
				//fp->f_pos = offset;	
				break;
		case SEEK_CUR:
				fp->f_pos = f_ldev->cur_file_pos + offset;	
				printk(KERN_INFO "New File Position =%d \n",fp->f_pos);
				break;
		default :
			goto OUT;
		
	}
	
	
	printk(KERN_INFO "Exit from %s \n",__func__);
		
	return fp->f_pos;
OUT :
	return -1;
}
@


1.8
log
@now worked for seek _cur
@
text
@d27 1
a27 1
				fp->f_pos += offset;	
@


1.7
log
@set the location for seek_end
@
text
@d27 1
a27 1
				fp->f_pos = offset;	
@


1.6
log
@*** empty log message ***
@
text
@d5 3
a7 1
{
d11 3
a13 2
	printk(KERN_INFO "file position =%d \n",fp->f_pos);
	
d21 1
a21 1
				fp->f_pos -= offset;
@


1.5
log
@in lseek retun the new position
@
text
@d9 1
d15 1
d19 2
d25 1
@


1.4
log
@now initialize the f_pos of file pointer to offset value.
@
text
@d16 2
a17 1
				fp->f_pos = offset;	
d26 2
a27 1

d30 1
a30 1
	return 0;
@


1.3
log
@making section for seek_set,seek_cur and seek_end
@
text
@d13 1
d16 1
d19 1
d22 2
a23 1
		break;
d29 2
@


1.2
log
@*** empty log message ***
@
text
@d10 11
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
	printk(KERN_INFO "offset = %ld \n",offset_);
@
